import { useRef, useState } from "react";
import "./styles.css";

export default function App() {
  const [todos, setTodo] = useState([]);
  const [input, setInput] = useState("");
  const [color, setColor] = useState("");
  const [show, setShow] = useState(false);
  const [disp, setDisp] = useState("Hide");
  const [error, setError] = useState(false);
  const inputRef = useRef();
  const [dateArr, setDates] = useState([]);
  let value = 1;
  const colors = [
    "blue",
    "green",
    "violet",
    "orange",
    "yellow",
    "red",
    "purple"
  ];
  /* Date */
  const date = new Date();
  const hrs = date.getHours();
  const mm = date.getMinutes();
  const today = date.getDate();
  const month = date.getMonth() + 1;
  const year = date.getFullYear();
  const sec = date.getSeconds();
  const formatDate = `Date Created ${today}/${month}/${year} Time:${hrs}:${mm}:${sec}`;
  const handleChange = (e) => {
    setInput(e.target.value);
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!input.length) {
      setError(true);
    } else {
      if (colors.includes(input)) {
        setColor(input);
        setInput("");
        setError(false);
      } else {
        setTodo([...todos, input]);
        setInput("");
        setError(false);
      }
    }

    inputRef.current.focus();
    setDates([...dateArr, formatDate.toString()]);
  };

  const removeElem = (els) => {
    const filterElem = todos.filter((el) => el !== els);
    setTodo([...filterElem]);
  };

  const list = todos.map((el, index) => (
    <p
      key={index}
      style={{ color: color, border: "1px solid", borderColor: color }}
    >
      {el}{" "}
      <span
        onClick={() => removeElem(el)}
        style={{
          cursor: "pointer",
          fontSize: "12px",
          border: "1px solid black",
          borderColor: color
        }}
        title="Click to remove list"
      >
        &#10005;
      </span>
      <li>{dateArr[index]}</li>
    </p>
  ));
  const showItems = () => {
    setShow(!show);
    show ? setDisp("Hide") : setDisp("Show");
  };

  const selectColor = () => {
    let len = colors.length - 1;
    value = Math.floor(len / Math.floor(Math.random() * 10));
    if (value <= 3) {
      value = (value + 4) % len;
    }
    if (value === Infinity) {
      value = 0;
    }
    setColor(colors[value]);
  };
  return (
    <form onSubmit={handleSubmit}>
      <div className="App">
        <h1>Hello CodeSandbox</h1>
        <h2>Start editing to see some magic happen!</h2>
        <input
          type="text"
          value={input}
          onChange={handleChange}
          ref={inputRef}
        />{" "}
        &nbsp;
        <button type="submit">Add Items</button> &nbsp;
        <button onClick={showItems}>{disp}</button> &nbsp;
        <button onClick={selectColor}>Change Colors</button> &nbsp;
        <button onClick={() => setTodo([])}>Reset</button>
        {error && <p style={{ color: "red" }}>Input Field is Empty</p>}
        {!show && list}
      </div>
    </form>
  );
}
